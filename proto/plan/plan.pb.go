// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/proto/plan/plan.proto

package plan

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Response_Status int32

const (
	Response_start   Response_Status = 0
	Response_end     Response_Status = 1
	Response_Expires Response_Status = 3
	Response_Deleted Response_Status = 4
)

var Response_Status_name = map[int32]string{
	0: "start",
	1: "end",
	3: "Expires",
	4: "Deleted",
}

var Response_Status_value = map[string]int32{
	"start":   0,
	"end":     1,
	"Expires": 3,
	"Deleted": 4,
}

func (x Response_Status) String() string {
	return proto.EnumName(Response_Status_name, int32(x))
}

func (Response_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_11df2e60025a02d9, []int{1, 0}
}

type Response_Code int32

const (
	Response_failed  Response_Code = 0
	Response_success Response_Code = 1
)

var Response_Code_name = map[int32]string{
	0: "failed",
	1: "success",
}

var Response_Code_value = map[string]int32{
	"failed":  0,
	"success": 1,
}

func (x Response_Code) String() string {
	return proto.EnumName(Response_Code_name, int32(x))
}

func (Response_Code) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_11df2e60025a02d9, []int{1, 1}
}

type Request struct {
	PlanID               string   `protobuf:"bytes,1,opt,name=planID,proto3" json:"planID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_11df2e60025a02d9, []int{0}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetPlanID() string {
	if m != nil {
		return m.PlanID
	}
	return ""
}

type Response struct {
	PlanName             string          `protobuf:"bytes,1,opt,name=planName,proto3" json:"planName,omitempty"`
	StartTime            string          `protobuf:"bytes,2,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime              string          `protobuf:"bytes,3,opt,name=EndTime,proto3" json:"EndTime,omitempty"`
	Status               Response_Status `protobuf:"varint,4,opt,name=status,proto3,enum=plan.Response_Status" json:"status,omitempty"`
	Code                 Response_Code   `protobuf:"varint,5,opt,name=code,proto3,enum=plan.Response_Code" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_11df2e60025a02d9, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetPlanName() string {
	if m != nil {
		return m.PlanName
	}
	return ""
}

func (m *Response) GetStartTime() string {
	if m != nil {
		return m.StartTime
	}
	return ""
}

func (m *Response) GetEndTime() string {
	if m != nil {
		return m.EndTime
	}
	return ""
}

func (m *Response) GetStatus() Response_Status {
	if m != nil {
		return m.Status
	}
	return Response_start
}

func (m *Response) GetCode() Response_Code {
	if m != nil {
		return m.Code
	}
	return Response_failed
}

func init() {
	proto.RegisterEnum("plan.Response_Status", Response_Status_name, Response_Status_value)
	proto.RegisterEnum("plan.Response_Code", Response_Code_name, Response_Code_value)
	proto.RegisterType((*Request)(nil), "plan.Request")
	proto.RegisterType((*Response)(nil), "plan.Response")
}

func init() { proto.RegisterFile("api/proto/plan/plan.proto", fileDescriptor_11df2e60025a02d9) }

var fileDescriptor_11df2e60025a02d9 = []byte{
	// 308 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x91, 0xcf, 0x4f, 0xfa, 0x40,
	0x10, 0xc5, 0x29, 0x94, 0x2d, 0xcc, 0x37, 0x90, 0xcd, 0x7c, 0xa3, 0xa9, 0xc4, 0x44, 0xec, 0x45,
	0x3c, 0x08, 0x09, 0x26, 0x1e, 0xbc, 0x0a, 0x07, 0x2f, 0x1e, 0x8a, 0x9e, 0xcd, 0xda, 0x1d, 0x63,
	0x13, 0x68, 0xd7, 0xee, 0x62, 0xfc, 0x2f, 0xfc, 0x97, 0xcd, 0x0e, 0xad, 0xbf, 0x2e, 0x5c, 0x9a,
	0xbe, 0xf7, 0x3e, 0xb3, 0xf3, 0xb2, 0x0b, 0x47, 0xca, 0xe4, 0x33, 0x53, 0x95, 0xae, 0x9c, 0x99,
	0xb5, 0x2a, 0xf8, 0x33, 0x65, 0x8d, 0xa1, 0xff, 0x4f, 0x4e, 0x21, 0x4a, 0xe9, 0x75, 0x4b, 0xd6,
	0xe1, 0x21, 0x08, 0x6f, 0xdd, 0x2e, 0xe2, 0x60, 0x1c, 0x4c, 0xfa, 0x69, 0xad, 0x92, 0x8f, 0x36,
	0xf4, 0x52, 0xb2, 0xa6, 0x2c, 0x2c, 0xe1, 0x08, 0x7a, 0xde, 0xbe, 0x53, 0x1b, 0xaa, 0xb1, 0x2f,
	0x8d, 0xc7, 0xd0, 0xb7, 0x4e, 0x55, 0xee, 0x3e, 0xdf, 0x50, 0xdc, 0xe6, 0xf0, 0xdb, 0xc0, 0x18,
	0xa2, 0x65, 0xa1, 0x39, 0xeb, 0x70, 0xd6, 0x48, 0xbc, 0x00, 0x61, 0x9d, 0x72, 0x5b, 0x1b, 0x87,
	0xe3, 0x60, 0x32, 0x9c, 0x1f, 0x4c, 0xb9, 0x66, 0xb3, 0x73, 0xba, 0xe2, 0x30, 0xad, 0x21, 0x3c,
	0x83, 0x30, 0x2b, 0x35, 0xc5, 0x5d, 0x86, 0xff, 0xff, 0x81, 0x6f, 0x4a, 0x4d, 0x29, 0x03, 0xc9,
	0x15, 0x88, 0xdd, 0x28, 0xf6, 0xa1, 0xcb, 0x45, 0x64, 0x0b, 0x23, 0xe8, 0x50, 0xa1, 0x65, 0x80,
	0xff, 0x20, 0x5a, 0xbe, 0x9b, 0xbc, 0x22, 0x2b, 0x3b, 0x5e, 0x2c, 0x68, 0x4d, 0x8e, 0xb4, 0x0c,
	0x93, 0x13, 0x08, 0xfd, 0x29, 0x08, 0x20, 0x9e, 0x55, 0xbe, 0x26, 0x2d, 0x5b, 0x1e, 0xb0, 0xdb,
	0x2c, 0x23, 0x6b, 0x65, 0x30, 0x7f, 0x84, 0x68, 0x45, 0xd5, 0x5b, 0x9e, 0x11, 0x9e, 0x83, 0x58,
	0x91, 0xaa, 0xb2, 0x17, 0x1c, 0x34, 0x45, 0xf8, 0x36, 0x47, 0xc3, 0xdf, 0xbd, 0x92, 0x96, 0x47,
	0x77, 0x3b, 0xf6, 0xa2, 0xf3, 0x6b, 0x18, 0x3c, 0x18, 0xad, 0x1c, 0xfd, 0x58, 0xb3, 0x33, 0xf6,
	0xce, 0x3e, 0x09, 0x7e, 0xde, 0xcb, 0xcf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc4, 0xfa, 0xca, 0xd1,
	0xfb, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ServiceClient is the client API for Service service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServiceClient interface {
	Search(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	Delete(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
}

type serviceClient struct {
	cc *grpc.ClientConn
}

func NewServiceClient(cc *grpc.ClientConn) ServiceClient {
	return &serviceClient{cc}
}

func (c *serviceClient) Search(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/plan.Service/Search", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) Delete(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/plan.Service/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ServiceServer is the server API for Service service.
type ServiceServer interface {
	Search(context.Context, *Request) (*Response, error)
	Delete(context.Context, *Request) (*Response, error)
}

// UnimplementedServiceServer can be embedded to have forward compatible implementations.
type UnimplementedServiceServer struct {
}

func (*UnimplementedServiceServer) Search(ctx context.Context, req *Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Search not implemented")
}
func (*UnimplementedServiceServer) Delete(ctx context.Context, req *Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}

func RegisterServiceServer(s *grpc.Server, srv ServiceServer) {
	s.RegisterService(&_Service_serviceDesc, srv)
}

func _Service_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceServer).Search(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/plan.Service/Search",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceServer).Search(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Service_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/plan.Service/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceServer).Delete(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _Service_serviceDesc = grpc.ServiceDesc{
	ServiceName: "plan.Service",
	HandlerType: (*ServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Search",
			Handler:    _Service_Search_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Service_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/proto/plan/plan.proto",
}

// UpdateServiceClient is the client API for UpdateService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UpdateServiceClient interface {
	Update(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
}

type updateServiceClient struct {
	cc *grpc.ClientConn
}

func NewUpdateServiceClient(cc *grpc.ClientConn) UpdateServiceClient {
	return &updateServiceClient{cc}
}

func (c *updateServiceClient) Update(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/plan.UpdateService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UpdateServiceServer is the server API for UpdateService service.
type UpdateServiceServer interface {
	Update(context.Context, *Request) (*Response, error)
}

// UnimplementedUpdateServiceServer can be embedded to have forward compatible implementations.
type UnimplementedUpdateServiceServer struct {
}

func (*UnimplementedUpdateServiceServer) Update(ctx context.Context, req *Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}

func RegisterUpdateServiceServer(s *grpc.Server, srv UpdateServiceServer) {
	s.RegisterService(&_UpdateService_serviceDesc, srv)
}

func _UpdateService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UpdateServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/plan.UpdateService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UpdateServiceServer).Update(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _UpdateService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "plan.UpdateService",
	HandlerType: (*UpdateServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Update",
			Handler:    _UpdateService_Update_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/proto/plan/plan.proto",
}
